/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.6/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    java
    application
}


group = "code.guru.lspclient"
version = "1.0-SNAPSHOT"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    val lsp4jVersion = "0.21.0"
    val lombokVersion = "1.18.38"
    val sl4jfVersion = "2.0.13"
    // lsp4j
    implementation("org.eclipse.lsp4j:org.eclipse.lsp4j:${lsp4jVersion}")
    // Lombok
    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    // SLF4J API (required for @Slf4j to generate a valid logger)
    implementation("org.slf4j:slf4j-api:${sl4jfVersion}") // or latest
    // Add a logging implementation â€” like slf4j-simple or logback
    runtimeOnly("org.slf4j:slf4j-simple:${sl4jfVersion}") // for

    // Use JUnit test framework.
    testImplementation(libs.junit)

    // This dependency is used by the application.
    implementation(libs.guava)
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = "code.guru.ScannerService"
}
